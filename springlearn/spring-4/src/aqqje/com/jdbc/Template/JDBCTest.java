package aqqje.com.jdbc.Template;import org.junit.Test;import org.springframework.context.ApplicationContext;import org.springframework.context.support.ClassPathXmlApplicationContext;import org.springframework.jdbc.core.BeanPropertyRowMapper;import org.springframework.jdbc.core.JdbcTemplate;import org.springframework.jdbc.core.RowMapper;import org.springframework.jdbc.core.namedparam.BeanPropertySqlParameterSource;import org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate;import org.springframework.jdbc.core.namedparam.SqlParameterSource;import javax.sql.DataSource;import java.sql.SQLException;import java.util.ArrayList;import java.util.HashMap;import java.util.List;import java.util.Map;public class JDBCTest {    private ApplicationContext context = null;    private JdbcTemplate jdbcTemplate;    private EmpDao empDao;    private DeptDao deptDao;    private NamedParameterJdbcTemplate namedParameterJdbcTemplate;    {        context = new ClassPathXmlApplicationContext("applicationContext.xml");        jdbcTemplate = (JdbcTemplate) context.getBean(JdbcTemplate.class);        empDao = (EmpDao)context.getBean("empDao");        deptDao = (DeptDao) context.getBean("deptDao");        namedParameterJdbcTemplate = (NamedParameterJdbcTemplate)context.getBean("namedParameterJdbcTemplate");    }    /**     * 测试 namedParameterJdbcTemplate     * 注意别名和 Bean 一致     */    @Test    public void testtestNamedParameterJdbcTemplate2(){        String sql = "INSERT INTO tbl_dept VALUES (:id, :name)";        Dept dept = new Dept();        dept.setId(4);        dept.setName("开发部");         SqlParameterSource paramSource = new BeanPropertySqlParameterSource(dept);        namedParameterJdbcTemplate.update(sql, paramSource);    }    /**     * 测试 namedParameterJdbcTemplate     *     * 优先：参数可以取别名     */    @Test    public void testNamedParameterJdbcTemplate1(){        String sql = "INSERT INTO tbl_emp (emp_name, gender, email, d_id) VALUES (:name, :gender, :email, :dId)";        Map<String , Object> paramMap = new HashMap<>();        paramMap.put("name", "aqqje11");        paramMap.put("gender", "F");        paramMap.put("email", "@qq.com");        paramMap.put("dId", 1);        namedParameterJdbcTemplate.update(sql, paramMap);    }    @Test    public void testDeptDao(){        System.out.println(deptDao.findById(1));    }    @Test    public void testEmpDao(){        System.out.println(empDao.findById(1));    }    /**     * BATCH INSERT DELETE UPDATA     */    @Test    public void testBatchUpdata(){        String sql = "INSERT INTO tbl_emp (emp_name, gender, email, d_id) VALUES (?, ?, ?, ?)";        List<Object[]> var2 = new ArrayList<>();        var2.add(new Object[]{"aa", "F", "1042136232@qq.com", 1});        var2.add(new Object[]{"bb", "F", "1042136232@qq.com", 1});        var2.add(new Object[]{"cc", "F", "1042136232@qq.com", 1});        var2.add(new Object[]{"dd", "F", "1042136232@qq.com", 1});        jdbcTemplate.batchUpdate(sql, var2);    }    /**     * 获取单个列的值， 或做统计     */    @Test    public void testQueryForObjcet(){        String sql = "SELECT COUNT(emp_id) FROM tbl_emp";        long count = jdbcTemplate.queryForObject(sql, Long.class);        System.out.println(count);    }    /**     * 查询对象集合     */    @Test    public void testQueryObjectList(){        String sql = "SELECT emp_id id, emp_name name, gender, email, d_id AS \"dept.id\" FROM tbl_emp";        RowMapper<Emp> rowMapper = new BeanPropertyRowMapper<>(Emp.class);        List<Emp> emps = jdbcTemplate.query(sql, rowMapper);        System.out.println(emps);    }    /**     * 查询并返回一个对象     * JdbcTemplate 不支持联级属性     *     */    @Test    public void testQueryForObject(){        String sql = "SELECT emp_id id, emp_name name, gender, email, d_id AS \"dept.id\" FROM tbl_emp WHERE emp_id = ?";        RowMapper rowMapper = new BeanPropertyRowMapper(Emp.class);        Emp emp = (Emp) jdbcTemplate.queryForObject(sql,rowMapper, 1);        System.out.println(emp);    }    /**     * UPDATA DELETE INSERT     */    @Test    public void testUpdate(){        String sql = "UPDATE tbl_emp SET emp_name = ? WHERE emp_id = ?";        jdbcTemplate.update(sql, "liui", 1);    }    @Test    public void test() throws SQLException {        DataSource dataSource = (DataSource)context.getBean("dataSource");        System.out.println(dataSource.getConnection());    }}